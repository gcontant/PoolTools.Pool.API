// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220915203659_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence("PlayerSequence");

            modelBuilder.HasSequence("PoolSequence");

            modelBuilder.HasSequence("PoolTeamSequence");

            modelBuilder.Entity("PoolTools.Pool.API.Domain.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR PlayerSequence");

                    b.Property<decimal>("AAV")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("PoolTeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PoolTeamId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("PoolTools.Pool.API.Domain.Entities.Pool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR PoolSequence");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Pools");
                });

            modelBuilder.Entity("PoolTools.Pool.API.Domain.Entities.PoolTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR PoolTeamSequence");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PoolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PoolId");

                    b.ToTable("PoolTeams");
                });

            modelBuilder.Entity("PoolTools.Pool.API.Domain.Entities.Player", b =>
                {
                    b.HasOne("PoolTools.Pool.API.Domain.Entities.PoolTeam", null)
                        .WithMany("Roster")
                        .HasForeignKey("PoolTeamId");

                    b.OwnsOne("PoolTools.Pool.API.Domain.ValueObjects.Position", "Position", b1 =>
                        {
                            b1.Property<int>("PlayerId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Code")
                                .IsRequired()
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)")
                                .HasColumnName("Position");

                            b1.HasKey("PlayerId");

                            b1.ToTable("Players");

                            b1.WithOwner()
                                .HasForeignKey("PlayerId");
                        });

                    b.OwnsOne("PoolTools.Pool.API.Domain.ValueObjects.Team", "Team", b1 =>
                        {
                            b1.Property<int>("PlayerId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("Code")
                                .IsRequired()
                                .HasMaxLength(3)
                                .HasColumnType("nvarchar(3)")
                                .HasColumnName("Team");

                            b1.HasKey("PlayerId");

                            b1.ToTable("Players");

                            b1.WithOwner()
                                .HasForeignKey("PlayerId");
                        });

                    b.Navigation("Position")
                        .IsRequired();

                    b.Navigation("Team")
                        .IsRequired();
                });

            modelBuilder.Entity("PoolTools.Pool.API.Domain.Entities.PoolTeam", b =>
                {
                    b.HasOne("PoolTools.Pool.API.Domain.Entities.Pool", null)
                        .WithMany("Teams")
                        .HasForeignKey("PoolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("PoolTools.Pool.API.Domain.ValueObjects.DraftPick", "DraftPicks", b1 =>
                        {
                            b1.Property<int>("PoolTeamId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"), 1L, 1);

                            b1.Property<int>("Position")
                                .HasColumnType("int")
                                .HasColumnName("Position");

                            b1.Property<int>("Round")
                                .HasColumnType("int")
                                .HasColumnName("Round");

                            b1.HasKey("PoolTeamId", "Id");

                            b1.ToTable("DraftPick");

                            b1.WithOwner()
                                .HasForeignKey("PoolTeamId");
                        });

                    b.Navigation("DraftPicks");
                });

            modelBuilder.Entity("PoolTools.Pool.API.Domain.Entities.Pool", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("PoolTools.Pool.API.Domain.Entities.PoolTeam", b =>
                {
                    b.Navigation("Roster");
                });
#pragma warning restore 612, 618
        }
    }
}
